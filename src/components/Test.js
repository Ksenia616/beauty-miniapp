import React, { useState } from "react";

export default function Test() {
  const [subscribed, setSubscribed] = useState(false);
  const [step, setStep] = useState(0);
  const [score, setScore] = useState(0);

  const questions = [
    { question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª –æ—Å–Ω–æ–≤–∞–Ω –±—Ä–µ–Ω–¥ Marvel Cosmetics?", answers: ["2013", "2024", "2010", "2021"], correct: "2013" },
    { question: "–ö–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç –±—Ä–µ–Ω–¥–∞ –±—ã–ª –≤—ã–ø—É—â–µ–Ω –ø–µ—Ä–≤—ã–º?", answers: ["–≥–µ–ª—å –¥–ª—è –±—Ä–æ–≤–µ–π", "–∫–∞—Ä–∞–Ω–¥–∞—à –¥–ª—è –≥—É–±", "–ø–æ–º–∞–¥–∞", "—Ç—É—à—å"], correct: "–∫–∞—Ä–∞–Ω–¥–∞—à –¥–ª—è –≥—É–±" },
  ];

  const handleAnswer = (answer) => {
    if (answer === questions[step].correct) {
      setScore(score + 1);
    }
    setStep(step + 1);
  };

  if (!subscribed) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen bg-black text-white px-4">
        <h1 className="text-xl mb-4 text-center">
          –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç ‚ù§Ô∏è
        </h1>
        <a
          href="https://t.me/marvelcosmetics_official"
          target="_blank"
          rel="noopener noreferrer"
          className="mb-4 px-6 py-2 bg-white text-black rounded-lg hover:bg-gray-300"
        >
          –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª
        </a>
        <button
          onClick={() => setSubscribed(true)}
          className="px-6 py-2 bg-white text-black rounded-lg hover:bg-gray-300"
        >
          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
        </button>
      </div>
    );
  }

  if (step < questions.length) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen bg-black text-white px-4">
        <h2 className="text-lg mb-6">{questions[step].question}</h2>
        {questions[step].answers.map((a, i) => (
          <button
            key={i}
            onClick={() => handleAnswer(a)}
            className="w-64 py-3 mb-3 bg-white text-black rounded-lg hover:bg-gray-300"
          >
            {a}
          </button>
        ))}
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-black text-white px-4">
      {score === questions.length ? (
        <h2 className="text-green-400 text-xl">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéÅ</h2>
      ) : (
        <h2 className="text-red-400 text-xl">–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –µ—Å—Ç—å –æ—à–∏–±–∫–∏ üòî</h2>
      )}
    </div>
  );
}
